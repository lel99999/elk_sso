---
- hosts: elkrh7
  vars:
#   download_url: http://download.oracle.com/otn-pub/java/jdk/8u5-b13/jdk-8u5-linux-x64.tar.gz
    download_url: http://download.oracle.com/otn-pub/java/jdk/8u181-b13/96a7b8442fe848ef90c96a2fad6ed6d1/jdk-8u181-linux-x64.tar.gz 
    download_folder: /opt
    java_name: "{{download_folder}}/jdk1.8.0_181"
    java_archive: "{{download_folder}}/jdk-8u181-linux-x64.tar.gz"

  become: yes
  become_method: sudo
  tasks:
    - name: install libselinux-python
#     become: yes
#     become_method: sudo
      yum:
        name: libselinux-python
        state: present
    - name: create directory
      file:
        path: /opt/oarcle
        state: directory
        owner: root
        group: root
        mode: 0755
    - name: create dir1
      file: 
        path: /opt/oracle/jdk1.8.0_181
        state: directory
        owner: root
        group: root
        mode: 0755

    
    - name: download java 8
      get_url: url={{ download_url }} dest={{ java_archive }} headers="Cookie:' gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie'" validate_certs=no owner=root group=root mode=744 
    - name: unpack archive
      file: state=directory path={{ java_name }} owner=root group=root recurse=yes
    - name: update alternatives
      command: alternatives --install /usr/bin/java java {{ java_name }}/bin/java 50

#     command: wget --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" "http://download.oracle.com/otn-pub/java/jdk/8u73-b02/jdk-8u73-linux-x64.rpm"
#     get_url:
#       url:  http://download.oracle.com/otn-pub/java/jdk/8u73-b02/jdk-8u73-linux-x64.rpm
#       dest: /opt
#       headers: 'Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie'
    - name: import ElasticSearch Key
      command: rpm --import http://packages.elastic.co/GPG-KEY-elasticsearch
    - name: create new yum repository file for ElasticSearch
      shell: echo $'[elasticsearch-2.x]\nname=Elasticsearch repository for 2.x packages\nbaseurl=http://packages.elastic.co/elasticsearch/2.x/centos\ngpgcheck=1\ngpgkey=http://packages.elastic.co/GPG-KEY-elasticsearch\nenabled=1' | sudo tee /etc/yum.repos.d/elasticsearch.repo
    
    - name: install ElasticSearch
      command: yum -y install elasticsearch
    - name: start ElasticSearch
      command: systemctl start elasticsearch
    - name: enable ElasticSearch
      command: systemctl enable elasticsearch

    - name: create Kibana repo
      shell:  echo $'[kibana-4.4]\nname=Kibana repository for 4.4.x packages\nbaseurl=http://packages.elastic.co/kibana/4.4/centos\ngpgcheck=1\ngpgkey=http://packages.elastic.co/GPG-KEY-elasticsearch\nenabled=1' | sudo tee /etc/yum.repos.d/kibana.repo
    - name: install Kibana
      command: yum -y install kibana
    - name: start Kibana
      command: systemctl start kibana
    - name: enable Kibana
      command: chkconfig kibana on

    - name: install epel-release
      command: yum -y install epel-release

    - name: install Ngix and Httpd-tools 
      command: yum -y install nginx httpd-tools
  
#   - name: edit kibanaadmin passwd
#     command: htpasswd -c /etc/nginx/htpasswd.users kibanaadmin

    - htpasswd:
      path: /etc/nginx/passwdfile
      name: kibanaadmin
      password: 'BADP@ssw0rd'
      owner: root
      group: root
      mode: 0640

#   - name: update Nginx configuration
    - replace:
        path: /etc/nginx/nginx.conf
        regexp: '^server{}'
        replace: '' 

#- name: Update /etc/nsswitch.conf
#        lineinfile: dest=/etc/nsswitch.conf regexp="{{ item.regexp }}" line="{{ item.line }}"
#        with_items:
#           - { regexp: '^passwd:.*compat', line: 'passwd: compat ldap' }
#           - { regexp: '^group:.*compat', line: 'group: compat ldap' }
#           - { regexp: '^shadow:.*compat', line: 'shadow: compat ldap' }

    - name: create Nginx Kibana server block
      blockinfile:
        path: /etc/nginx/conf.d/kibana.conf
        block: |
          server {
              listen 80;

              server_name example.com;

              auth_basic "Restricted Access";
              auth_basic_user_file /etc/nginx/htpasswd.users;

              location / {
                  proxy_pass http://localhost:5601;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;        
              }
          }

    - name: start Nginx
      command: systemctl start nginx

    - name: enable Nginx
      command: sytemctl enable nginx

    - name: create Logstash repo
      shell:  echo $'[logstash-2.2]\nname=logstash repository for 2.2 packages\nbaseurl=http://packages.elasticsearch.org/logstash/2.2/centos\ngpgcheck=1\ngpgkey=http://packages.elasticsearch.org/GPG-KEY-elasticsearch\nenabled=1' | sudo tee /etc/yum.repos.d/logstash.repo

    - name: install Logstash
      command: yum -y install logstash

    - name: configure Logstash
      blockinfile:
        path: /etc/logstash/conf.d/02-beats-input.conf
        block: |
          input {
            beats {
              port => 5044
              ssl => true
              ssl_certificate => "/etc/pki/tls/certs/logstash-forwarder.crt"
              ssl_key => "/etc/pki/tls/private/logstash-forwarder.key"
            }
          }

    - name: configure Logstash
      blockinfile:
        path: /etc/logstash/conf.d/10-syslog-filter.conf
        block: |
          filter {
            if [type] == "syslog" {
              grok {
                match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
                add_field => [ "received_at", "%{@timestamp}" ]
                add_field => [ "received_from", "%{host}" ]
              }
              syslog_pri { }
              date {
                match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
              }
            }
          }

    - name: configure Logstash 3
      blockinfile:
        path: /etc/logstash/conf.d/30-elasticsearch-output.conf
        block: |
          output {
            elasticsearch {
              hosts => ["localhost:9200"]
              sniffing => true
              manage_template => false
              index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
              document_type => "%{[@metadata][type]}"
            }
          }

    - name: Test Logstash Configuration
      command: service logstash configtest
      register: logstash_configtest

    - name: print Logstash Configtest 
      debug: msg="{{ logstash_configtest.stdout }}"

    - name: restart Logstash
      command: systemctl restart logstash

    - name: enable Logstash
      command: chkconfig logstash on

    - name: Get Kibana Dashboard
      get_url:
        url: https://download.elastic.co/beats/dashboards/beats-dashboards-1.1.0.zip
        dest: /opt/beats-dashboards-1.1.0.zip
        
